name: Continuous integration

on:
  push:
    branches:
      - master
      - release-**
  pull_request:
    branches:
      - '**'
  release:
    types: [published]

jobs:
  # Run unit tests
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false  # keep for now, since 3.22 and 3.28 have different bases than 3.34+
      matrix:
        qgis_version: [release-3_22, release-3_28, 3.34, latest]
    env:
      QGIS_TEST_VERSION: ${{ matrix.qgis_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Package PyPI Packages
        run: |
          sudo ./scripts/package_pip_packages.sh
      - name: Test on QGIS
        run: docker compose -f .docker/docker-compose.gh.yml run qgis /usr/src/.docker/run-docker-tests.sh

  zip_comment:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install qtbase5-dev qttools5-dev-tools
          sudo pip install qgis-plugin-ci
      - name: Package PyPI Packages
        run: |
          sudo ./scripts/package_pip_packages.sh
      - name: Make dir
        run: |
          cd ${GITHUB_WORKSPACE}
          mkdir QgisModelBaker_${{ github.event.pull_request.head.sha }}
          mv QgisModelBaker QgisModelBaker_${{ github.event.pull_request.head.sha }}/
      - name: Upload as ZIP Artifact
        uses: actions/upload-artifact@v5
        with:
          name: QgisModelBaker_${{ github.event.pull_request.head.sha }}
          path: QgisModelBaker_${{ github.event.pull_request.head.sha }}
      - name: Get Artifact ID
        id: get-artifact-id
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: 'opengisch',
              repo: 'QgisModelBaker',
              run_id: ${{github.run_id}},
            });

            const the_artifact = artifacts.data.artifacts[0];
            if (the_artifact) {
              core.setOutput('the_artifact-id', the_artifact.id);
            }
      - name: Create comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            üßÅ Ta-daaa, find a test ZIP of ${{ github.event.pull_request.head.sha }} [here](https://github.com/opengisch/QgisModelBaker/actions/runs/${{github.run_id}}/artifacts/${{ steps.get-artifact-id.outputs.the_artifact-id }}).

  release:
    runs-on: ubuntu-22.04
    env:
      OSGEO_USERNAME: mkuhn
      OSGEO_PASSWORD: ${{ secrets.OSGEO_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TX_TOKEN: ${{ secrets.TX_TOKEN }}
      GITHUB_REF: ${{ github.ref }}
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install qtbase5-dev qttools5-dev-tools
          sudo pip install qgis-plugin-ci
      - name: Package PyPI Packages
        run: |
          sudo ./scripts/package_pip_packages.sh
      - name: Release
        run: |
          qgis-plugin-ci release ${GITHUB_REF##*/} --transifex-token ${TX_TOKEN} --github-token ${GITHUB_TOKEN} --osgeo-username ${OSGEO_USERNAME} --osgeo-password ${OSGEO_PASSWORD} --asset-path QgisModelBaker/libs

  translations:
    runs-on: ubuntu-22.04
    env:
      TX_TOKEN: ${{ secrets.TX_TOKEN }}
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install dependencies
        run: sudo pip install qgis-plugin-ci
      - name: üåç Push translations
        run: |
          qgis-plugin-ci push-translation ${TX_TOKEN}
